// –§—É–Ω–∫—Ü—ñ—è –ø–æ—à—É–∫—É —Ä–µ—Ü–µ–ø—Ç—ñ–≤
function searchRecipes() {
  const input = document.getElementById('searchInput');
  const filter = input.value.toLowerCase();
  const ul = document.getElementById('recipeList');

  if (ul) {
    const li = ul.getElementsByTagName('li');
    let found = false;

    for (let i = 0; i < li.length; i++) {
      const a = li[i].getElementsByTagName('a')[0];
      const txtValue = a.textContent || a.innerText;

      if (txtValue.toLowerCase().includes(filter) && filter !== "") {
        li[i].style.display = "";
        found = true;
      } else {
        li[i].style.display = "none";
      }
    }

    if (filter === "") {
      for (let i = 0; i < li.length; i++) {
        li[i].style.display = "";
      }
    }

    // –ó–∞–º—ñ—Å—Ç—å –∑–∞–º—ñ–Ω–∏ innerHTML –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –¥–æ–¥–∞—Ç–∫–æ–≤–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—ñ
    const noResults = document.getElementById('noResults');
    if (!found && filter !== "") {
      if (!noResults) {
        const message = document.createElement('li');
        message.id = 'noResults';
        message.textContent = "–†–µ—Ü–µ–ø—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üòû";
        message.style.fontStyle = 'italic';
        ul.appendChild(message);
      }
    } else {
      if (noResults) {
        noResults.remove();
      }
    }
  } else {
    // –Ø–∫—â–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –Ω–µ–º–∞—î —Å–ø–∏—Å–∫—É —Ä–µ—Ü–µ–ø—Ç—ñ–≤ ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –ø–æ—à—É–∫—É
    window.location.href = `catalog.html?search=${encodeURIComponent(filter)}`;
  }
}

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è –º–µ–Ω—é –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function updateNav() {
  const nav = document.getElementById("navMenu");
  const user = localStorage.getItem("user");
  const currentPage = window.location.pathname.split("/").pop() || 'index.html';

  // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∑ –∫–ª–∞—Å–æ–º active –∑–∞–º—ñ—Å—Ç—å —ñ–Ω–ª–∞–π–Ω-—Å—Ç–∏–ª—ñ–≤
  function navLink(href, text) {
    const isActive = href === currentPage;
    return `<a href="${href}" class="${isActive ? 'active' : ''}">${text}</a>`;
  }

  if (user) {
    nav.innerHTML = `
      ${navLink('index.html', '–ì–æ–ª–æ–≤–Ω–∞')}
      ${navLink('catalog.html', '–ö–∞—Ç–∞–ª–æ–≥ —Ä–µ—Ü–µ–ø—Ç—ñ–≤')}
      ${navLink('add.html', '–î–æ–¥–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç')}
      <a href="profile.html" class="active-profile">–ü—Ä–æ—Ñ—ñ–ª—å (${user})</a>
      <a href="#" id="logoutLink" class="active-profile" style="cursor:pointer;">–í–∏—Ö—ñ–¥</a>
      <div class="search-container">
        <input type="text" id="searchInput" placeholder="–ü–æ—à—É–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤...">
        <button onclick="searchRecipes()">–®—É–∫–∞—Ç–∏</button>
      </div>
    `;

    document.getElementById("logoutLink").addEventListener("click", (e) => {
      e.preventDefault();
      localStorage.removeItem("user");
      updateNav();
      window.location.href = "index.html";
    });
  } else {
    nav.innerHTML = `
      ${navLink('index.html', '–ì–æ–ª–æ–≤–Ω–∞')}
      ${navLink('catalog.html', '–ö–∞—Ç–∞–ª–æ–≥ —Ä–µ—Ü–µ–ø—Ç—ñ–≤')}
      ${navLink('add.html', '–î–æ–¥–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç')}
      ${navLink('login.html', '–í—Ö—ñ–¥')}
      ${navLink('register.html', '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è')}
      <div class="search-container">
        <input type="text" id="searchInput" placeholder="–ü–æ—à—É–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤...">
        <button onclick="searchRecipes()">–®—É–∫–∞—Ç–∏</button>
      </div>
    `;
  }
}

// –û–±—Ä–æ–±–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
function handleRegister(e) {
  e.preventDefault();
  const name = document.getElementById("regName").value.trim();
  const email = document.getElementById("regEmail").value.trim();
  const pass = document.getElementById("regPass").value.trim();

  if (name && email && pass) {
    localStorage.setItem("user", name);
    alert("–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!");
    window.location.href = "index.html";
  } else {
    alert("–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è");
  }
}

// –û–±—Ä–æ–±–∫–∞ –≤—Ö–æ–¥—É
function handleLogin(e) {
  e.preventDefault();
  const name = document.getElementById("loginName").value.trim();
  const pass = document.getElementById("loginPass").value.trim();

  if (name && pass) {
    localStorage.setItem("user", name);
    alert("–í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π!");
    window.location.href = "index.html";
  } else {
    alert("–ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è");
  }
}

document.addEventListener("DOMContentLoaded", () => {
  updateNav();

  const registerForm = document.getElementById("registerForm");
  if (registerForm) {
    registerForm.addEventListener("submit", handleRegister);
  }

  const loginForm = document.getElementById("loginForm");
  if (loginForm) {
    loginForm.addEventListener("submit", handleLogin);
  }
});
